# SUMBIRD PIPELINE CONFIGURATION
# This file contains all configuration variables for the Sumbird pipeline.
# Copy this file to .env and update the values for your environment.

# GENERAL CONFIGURATION

# Pipeline execution thresholds
MIN_FEEDS_TOTAL=50  # Minimum number of feeds to process for valid pipeline execution
MIN_FEEDS_SUCCESS_RATIO=0.9  # Minimum ratio of successful feeds required (0.9 = 90%)

# Date and timezone settings
TARGET_DATE=  # Target date in format YYYY-MM-DD, leave empty for yesterday's date
TIMEZONE=UTC  # Timezone in IANA format (e.g., America/New_York, Europe/London)

# File format settings
FILE_FORMAT=content-{date}.html  # Output filename format with {date} placeholder

# FETCHER MODULE (src/fetcher.py)

# RSS feed service configuration
BASE_URL=https://example.com/  # RSS feed service URL for fetching social media posts

# Output configuration
EXPORT_DIR=data/export  # Directory for storing raw exported content
EXPORT_TITLE_FORMAT=# Social Media Posts on {date}  # Title format for raw exports

# SUMMARIZER MODULE (src/summarizer.py)

# OpenRouter API configuration
OPENROUTER_API_KEY=your_openrouter_api_key_here  # OpenRouter API key
OPENROUTER_SITE_URL=https://example.com  # Your website for API attribution
OPENROUTER_SITE_NAME=YourAppName  # Your app name for API attribution

# Summarizer-specific settings
OPENROUTER_MODEL=anthropic/claude-3.7-sonnet  # AI model for summarization
OPENROUTER_MAX_TOKENS=4000  # Maximum response length in tokens
OPENROUTER_TEMPERATURE=0  # AI randomness (0 = deterministic, 1 = creative)
SYSTEM_PROMPT_PATH=prompts/summarizer.txt  # Path to AI system prompt file

# Output configuration
SUMMARY_DIR=data/summary  # Directory for storing AI-generated summaries
SUMMARY_TITLE_FORMAT=# Daily Summary for {date}  # Title format for summary documents

# TRANSLATOR MODULE (src/translator.py)

# Translation model configuration (uses OpenRouter API from Summarizer)
TRANSLATOR_MODEL=google/gemini-2.0-flash-001  # AI model for translation
TRANSLATOR_PROMPT_PATH=prompts/translator.txt  # Path to translation system prompt

# Output configuration
TRANSLATED_DIR=data/translated  # Directory for storing translated content

# SCRIPT WRITER MODULE (src/script_writer.py)

# Script writer model configuration (uses OpenRouter API from Summarizer)
SCRIPT_WRITER_MODEL=google/gemini-2.0-flash-lite-001  # AI model for script writing
SCRIPT_WRITER_PROMPT_PATH=prompts/screen_writer.txt  # Path to script writer system prompt

# Output configuration
SCRIPT_DIR=data/script  # Directory for storing TTS-optimized scripts

# NARRATOR MODULE (src/narrator.py)

# Gemini TTS API configuration
GEMINI_API_KEY=your_gemini_api_key_here  # Gemini API key for TTS
GEMINI_TTS_MODEL=gemini-2.5-flash-preview-tts  # Gemini TTS model
GEMINI_TTS_VOICE=Zephyr  # Voice to use for TTS (Zephyr, Aoede, Charon, Fenrir)
NARRATOR_PROMPT_PATH=prompts/narrator.txt  # Path to TTS narrator prompt file

# Output configuration
NARRATED_DIR=data/narrated  # Directory for storing TTS audio files

# TELEGRAPH CONVERTER MODULE (src/telegraph_converter.py)

# Output configuration
CONVERTED_DIR=data/converted  # Directory for storing Telegraph-formatted content

# Footer configuration for Telegraph articles
FOOTER_TEXT=üîç Provided by  # Footer text prefix (primary language)
FOOTER_LINK_TEXT=YourAppName  # Footer link text (primary language)
FOOTER_LINK_URL=https://t.me/your_channel  # Footer link URL (primary language)
FOOTER_TEXT_FA=üîç Provided by  # Footer text prefix (secondary language)
FOOTER_LINK_TEXT_FA=YourAppName  # Footer link text (secondary language)
FOOTER_LINK_URL_FA=https://t.me/your_channel  # Footer link URL (secondary language)

# TELEGRAPH PUBLISHER MODULE (src/telegraph_publisher.py)

# Telegraph API configuration
TELEGRAPH_ACCESS_TOKEN=your_telegraph_access_token_here  # Telegraph API access token

# Output configuration
PUBLISHED_DIR=data/published  # Directory for storing publication metadata

# TELEGRAM DISTRIBUTER MODULE (src/telegram_distributer.py)

# Telegram Bot API configuration
TELEGRAM_BOT_TOKEN=1234567890:AABBCCDDeeffgghhiijjkkllmmnnoopp  # Telegram bot API token
TELEGRAM_CHAT_ID=@your_channel_name  # Channel ID where content will be distributed (@channel_name for public, -100... for private)

# Message formatting
TELEGRAM_MESSAGE_TITLE_FORMAT=<b>{title}</b>  # HTML format for message titles
TELEGRAM_SUMMARY_FORMAT=Summary of {feeds_success} sources available in <a href="{en_url}">English</a> and <a href="{fa_url}">Alternative Language</a>.  # Summary message template
TELEGRAM_CHANNEL_DISPLAY=@YourChannel  # Channel display name in messages
TELEGRAM_PARSE_MODE=HTML  # Message format (HTML or Markdown)
TELEGRAM_DISABLE_WEB_PREVIEW=false  # Whether to disable link previews (true/false)

# Audio file titles
TELEGRAM_AUDIO_TITLE_EN=English Summary  # Title for English audio files
TELEGRAM_AUDIO_TITLE_FA=Persian Summary  # Title for Persian audio files

# TWITTER/X HANDLES CONFIGURATION
# Add handles one per line after HANDLES=
HANDLES=
example1  # Example social media account
example2  # Another account to monitor